var SCObject = function(win, doc, loc, na) {
	
    
	function init() {
		console.log('Инициализарован');
		postloadfunction();
       
    }
	
	
	
	
	//ПРоверка IP
    function checkIpDeny() {
        if (null === h_params || "undefined" == typeof h_params || "undefined" == typeof h_params.user_ip || "undefined" == typeof h_params.ip_deny || !h_params.ip_deny.length) return !1;
        for (var a in h_params.ip_deny)
            if (h_params.ip_deny.hasOwnProperty(a)) {
                var b = h_params.ip_deny[a] + "";
                if (b = b.replace(/ /g, "").replace(/\*/g, "\\d").replace(/\./g, "\\."), h_params.user_ip.match(b)) return !0
            }
        return !1
    }
	
	function postloadfunction() {
        if (!SCCore.helpers.isEmpty(SCCore.db_params) && !checkIpDeny() && (h_params = SCCore.db_params)) {			
           
		//   initGA();
			if(initGA(), loadCustomLayoutCSS(), //Далее иеициалищация будет ли показан виджет
				SCCore.cookies.get("hunter_showed") && 1 == SCCore.cookies.get("hunter_showed") && h_params.show_once && "1" == h_params.show_once && (block_auto_popup = !0),
				SCCore.cookies.get("hunter_session") && 1 == SCCore.cookies.get("hunter_session") && h_params.show_once_session && "1" == h_params.show_once_session && (block_auto_popup = !0),
				h_params.active && 1 == h_params.active && (widget_mode = "worktime"),
				"night" == widget_mode && h_params.disable_night_mode && 1 == h_params.disable_night_mode
			)  
				return void(block_auto_popup = !0);
				
			var  localization = SCCore.lang.languages[SCCore.lang.langCode];	
			//ПОЛУЧЕНИЕ И ПРОВЕРКА ДАННЫХ С ПАРАМС
			if (
				"undefined" != typeof h_params.sensitivity && parseInt(h_params.sensitivity) >= 1 && parseInt(h_params.sensitivity) <= 10 && (activityTracker.accelerometer.factor = 1 + .06 * (5 - h_params.sensitivity)), 
				helpers.workTime.init(h_params.weekday, h_params.start_arr, h_params.stop_arr, h_params.time_zone), 
				//telemetry.addUserData(), 
				//"undefined" != typeof h_params.client_phone && (dialogs.client_phone = h_params.client_phone, 
				//client_phone.match(/^\+/) || (dialogs.client_phone = "+" + h_params.client_phone)), 
				//"undefined" != typeof h_params.client_name && (SCCore.user.name = h_params.client_name), 
				//"undefined" != typeof h_params.client_calls && (h_params.client_calls < 10 ? aggression = 1.3 : h_params.client_calls >= 10 && h_params.client_calls <= 20 ? aggression = 1 : h_params.client_calls > 20 && (aggression = .7)), 
				//"undefined" != typeof h_params.dialog_instead_of_chat && (dialog_instead_of_chat = 0 !== parseInt(h_params.dialog_instead_of_chat)), 
				//"undefined" != typeof h_params.mc_instead_of_contact_form && "worktime" === widget_mode && (mc_instead_of_contact_form = 0 !== parseInt(h_params.mc_instead_of_contact_form)), 
				//"undefined" != typeof h_params.sound_chat_message && (sound_chat_message = 1 === parseInt(h_params.sound_chat_message)), 
				//"undefined" != typeof h_params.pulse_animation && (pulse_animation = 1 === parseInt(h_params.pulse_animation)), 
				//"undefined" != typeof h_params.show_powered_by && (show_powered_by = 1 === parseInt(h_params.show_powered_by)), 
				//"undefined" != typeof h_params.free_mode && (free_mode = 0 == parseInt(h_params.free_mode) ? !1 : !0, loc.hash)				
				1==1
			) {
				console.log('ПОЛУЧЕНИЕ И ПРОВЕРКА ДАННЫХ С ПАРАМС');
				
				
				
				//var g = loc.hash.substring(1);
                //"callbackhunter-dark" === g && (free_mode = !0)
            }
			
			
            
        }
    }
	
	
	
	function initGA() {		
		if ("undefined" != typeof h_params.ga_disable && 1 == h_params.ga_disable) return !1;
		console.log('Подключаем Google аналитик');
		return !0;
    }
	
	//ПОДГРУЗКА СТИЛЕЙ ПОЛЬЗОВАТЕЛЯ
    function loadCustomLayoutCSS() {
		console.log('ЗАгрузка custom стилей пользователя');
        if (null !== h_params && "undefined" != typeof h_params.custom_layout && h_params.custom_layout.css_file) {  
			custom_layout = h_params.custom_layout;
            "undefined" != typeof custom_layout.css_file && SCCore.loadFile("css", "//" + SCCore.opt.static_domain + "/widgets/custom/" + custom_layout.css_file, !0)
	    }
    }
	
	
	var is_debug = 0,
        is_debug_dom = 0,
        skip_typing_effect = !1,
        skip_typing_effect_on_mobile = !0,
        disable_canvas = !1,
        disable_ga_events = !1,
        disable_metrika_events = !1,
        enable_discount = !1,
        show_office_choice = !0,
        dialog_instead_of_chat = !1,
        mc_instead_of_contact_form = !1,
        sound_chat_message = !1,
        pulse_animation = !1,
        show_powered_by = !0,
        aggression = 1.3,
        timer = null,
        dialog_timer = null,
        widget_closed_at = null,
        enter_or_exit_at = null,
        minimum_enter_or_exit_delay = 180,
        distance_timer = null,
        block_show_banner = !1,
        countdown = 26,
        countdownObj, modeToggleCountdown = 0,
        modeToggleCountdownObj, activity_exit_event = !1,
        h_params = null,
        reverse = !0,
        block_auto_popup = !1,
        min_popup_delay = 0,
        minPopupTimer = null,
        min_window_exit_delay = 0,
        min_enter_on_active_delay = 18,
        avgTimer = null,
        avgTimerSec = 0,
        show_enter = !0,
        show_exit = !0,
        phone_code = "",
        is_mobile = !1,
        office_id = 0,
        client_phone = "",
        call_rand_id = "",
        custom_layout = null,
        widget_mode = "night",
        ga_cbh = function() {},
        yaMetrikaName = null,
        makeMeasureDistance = !0,
        phoneiconScrollOffset = 0,
        phoneDragObject = null,
        ua = navigator.userAgent.toLowerCase(),
        isOpera = ua.indexOf("opera") > -1,
        isIE = !isOpera && ua.indexOf("msie") > -1,
        view_w = !document.compatMode && !isIE || isOpera ? (document.parentWindow || document.defaultView).innerWidth : "CSS1Compat" == document.compatMode ? document.documentElement.clientWidth : document.body.clientWidth,
        view_h = !document.compatMode && !isIE || isOpera ? (document.parentWindow || document.defaultView).innerHeight : "CSS1Compat" == document.compatMode ? document.documentElement.clientHeight : document.body.clientHeight,
        phoneicon_x = 90,
        phoneicon_y = 100,
        after_action_url = "",
        has_minutes = !0,
        complain_sent = !1,
        addEvent = null,
        removeEvent = null,
        default_phone = {},
        reachedPageEnd = !1,
        reachedScrollBottom, showedExit = !1,
        widgetOpen = !1,
        micromenuOpen = !1,
        has_payments = !1,
        free_mode = !1,
       // widgetSounds = new WidgetSounds({
       //     hollow: !0
        //}),
        defaultRating = 5,
        phone_icon_color = "green",
        phone_icon_color_code = null,
        background_color_code = "f0f0f0",
        phone_icon_opacity = 1,
        widget_body_opacity = 1,
        VK_default_count = 2526,
        Twitter_default_count = 2155,
        Facebook_default_count = 484,
        icon_clicked = !1,
        widget_show_reason = null,
        StrongDate = Date,
        comments_url = "http://blog.callbackhunter.ru/?p=2292",		
		activityTracker = {
            accelerometer: {
                current: 1e3,
                start: 1e3,
                step: 8,
                factor: 1
            },
            edges: {
                a: 1,
                b: 1
            },
            threshold: 98,
            exitThreshold: 24,
            activityLastTime: null,
            activityTimer: null,
            catchLastTime: null,
            mouseLastPos: null,
            lastTimeSpeed: null,
            Z: 4e3,
            start: function(a) {
                this.accelerometer.start = this.accelerometer.start * this.accelerometer.factor, this.accelerometer.step = this.accelerometer.step * this.accelerometer.factor, Object.keys(this.edges).forEach(function(a) {
                    var b = "hunter_edge_" + a,
                        c = SCCore.cookies.get(b);
                    c ? (this.edges[a] = c, c < this.threshold && (this.accelerometer.current = this.accelerometer.start - c * this.accelerometer.step)) : this.accelerometer.current = this.accelerometer.start
                }.bind(this)), this.save(), this.activityLastTime = Date.now(), this.activityTimer = setInterval(this.checkActivity.bind(this), 500), $(win).on("mousemove", this.catchMovement.bind(this))
            },
            save: function() {
                Object.keys(this.edges).forEach(function(a) {
                    var b = "hunter_edge_" + a;
                    SCCore.cookies.set(b, this.edges[a], {
                        expires: 30
                    })
                }.bind(this))
            },
            checkActivity: function() {
                var a = Date.now(),
                    b = 1,
                    c = 97,
                    d = 95,
                    e = Object.keys(this.edges),
                    f = helpers.getRandomInt(1, e.length),
                    g = e[f - 1];
                a - this.activityLastTime <= 8e3 && (this.edges[g] < c - 1 ? (this.edges[g] = this.edges[g] + b, this.edges[g] > c && (this.edges[g] = c), this.accelerometer.current -= this.accelerometer.step) : this.edges[g] = c, this.save());
                var h = e.reduce(function(a, b) {
                    return a + this.edges[b]
                }.bind(this), 0);
                h > this.exitThreshold && (activity_exit_event = !0), this.edges[g] >= d && (this.accelerometer.current = 20)
            },
            catchMovement: function(a) {
                if (this.activityLastTime = Date.now(), show_exit && activity_exit_event && !block_show_banner && !block_auto_popup && !(min_popup_delay > 0 || 5 > avgTimerSec)) {
                    if (!this.catchLastTime) return this.catchLastTime = Date.now(), this.mouseLastPos = a.screenY, void(this.lastTimeSpeed = 0);
                    var b = Date.now(),
                        c = b - this.catchLastTime;
                    if (!(5 > c)) {
                        var d = a.screenY - this.mouseLastPos,
                            e = Math.round(d / c * 100),
                            f = e - this.lastTimeSpeed,
                            g = Math.round(f / c * 100),
                            h = 0;
                        0 > g && (h = Math.round(-1e3 * g / this.Z), h > this.accelerometer.current / 2 && showWidgetExit()), this.catchLastTime = b, this.mouseLastPos = a.screenY, this.lastTimeSpeed = e
                    }
                }
            }
        },
		helpers = {
			workTime: function() {
                var a = [0, 1, 2, 3, 4, 5, 6],
                    b = 9,
                    c = 18,
                    d = 0,
                    e = {
                        0: [],
                        1: [],
                        2: [],
                        3: [],
                        4: [],
                        5: [],
                        6: []
                    },
                    f = {
                        0: [],
                        1: [],
                        2: [],
                        3: [],
                        4: [],
                        5: [],
                        6: []
                    },
                    g = [],
                    h = ["jan", "feb", "mar", "apr", "may", "jun", "jul", "aug", "sep", "oct", "nov", "dec"],
                    i = [],
                    j = [],
                    k = -(new StrongDate).getTimezoneOffset(),
                    l = function(a) {
                        return parseInt(b[a])
                    },
                    m = function(a) {
                        var b = l(a),
                            d = parseInt(c[a]);
                        return b === d && 0 === b ? d = 24 : d += 1, d
                    },
                    n = function(n, o, p, q) {
						//h_params.weekday, h_params.start_arr, h_params.stop_arr, h_params.time_zone
						//Под временем сервера понимаются настройки пользователя		
						var date = new StrongDate;
                        k = -(date).getTimezoneOffset(), a = n.split(","), q = q.replace(/^UTC/, "");
                        var r = 1, current_day = (date).getDay(), current_hour = (date).getHours(), current_min = (date).getMinutes(), current_time = current_hour*60 + current_min;
						"" === q ? d = 0 : ("+" === q.slice(0, 1) && (r = -1), q = q.substr(1).split(":"), d = r * (60 * parseInt(q[0], 10) + parseInt(q[1], 10)));
						//d  - разница между сервером и клиентом
						console.log('Разинца между поясами: сервер - клиент:   ' + d);
						//Алгоритм									
						var server_date = new StrongDate(+new StrongDate + 1e3 * d * 60); //Время на сервере 	
						var current_day = server_date.getDay(); // нынешний день на сервере						
						var ind = 0; // счетчик
						var flag = 0; // Флаг
						var __name = ''; //Имя в селекте
						//числа 4 - статично -- т.к 4 состояния Сегодня, завтра, после и дата
						while (ind < 4 && ind <= a.length){ //куда то вставить 7
							
							a.every(function(item, key) {
														
	
								if((flag === 0 && item >= current_day) || (flag === 1 && item < current_day)){
									__name = 'имя' + (item-current_day); // __getname(ind, server_date)  item-curre = ind
									console.log(__name + '----' + item);
									for(var q = o[item]; q<=p[item]; q++){
										//_pushtoarray - перестройка под время клиента
									}
									ind++;
								}else{
									if(flag === 1){
										ind = 4;
										return false;
									}										
								}
								if(ind<4)
									return true;
								else
									return false;
							});
							flag = 1; //подклюбчаем другие дни след недели							
						}	

						
						
						
					
						/*
						
                         for (var s = 0; s < a.length; s++)
                            for (var t = parseInt(a[s], 10), u = l(t), v = m(t), w = u; v > w; w++) {
                                var x = 60 * w + d;
                                if (x >= 0 && 1440 > x) e[t].push(x);
                                else if (x >= 1440) {
                                    var y = (t + 1) % 7;
                                    "undefined" != typeof a[y] && e[y].push(x - 1440)
                                } else if (0 > x) {
                                    var y = (t - 1) % 7;
                                    "undefined" != typeof a[y] && e[y].push(1440 - Math.abs(x))
                                }
                            }
                        if (k) {
                            for (var s in e)
                                if (e.hasOwnProperty(s) && e[s].length)
                                    for (var t = parseInt(s, 10), z = 0; z < e[t].length; z++) {
                                        var x = e[t][z] + k;
                                        if (x >= 0 && 1440 > x) f[s].push(x);
                                        else if (x >= 1440) {
                                            var y = 6 >= t + 1 ? t + 1 : 0;
                                            f[y].push(x - 1440)
                                        } else if (0 > x) {
                                            var y = 6 >= t - 1 ? t - 1 : 0;
                                            f[y].push(1440 - x)
                                        }
                                    }
                        } else f = e;
                        for (var A = (new StrongDate).getDay(), B = 0, s = A; A + 14 > s && 4 > B; s++) {
                            var C = s - A,
                                D = s % 7;
                            if ("undefined" != typeof f[D] && f[D].length) {
                                var E = "",
                                    F = new StrongDate(+new StrongDate + 1e3 * C * 24 * 60 * 60),
                                    G = F.getDate() + " " + __("monthes." + h[F.getMonth()]);
                                switch (C) {
                                    case 0:
                                        E = __("callLater.when.today");
                                        break;
                                    case 1:
                                        E = __("callLater.when.tomorrow");
                                        break;
                                    case 2:
                                        E = __("callLater.when.afterTomorrow");
                                        break;
                                    default:
                                        E = G
                                }
                                g.push({
                                    n: D,
                                    s: E
                                }), i.push({
                                    n: D,
                                    s: G
                                }), j.push({
                                    n: D,
                                    d: +F
                                }), B++
                            }
                        }
						*/
                    },
                    o = function(a) {
                        return a.toJSON = 0, JSON.parse(JSON.stringify(a))
                    };
                return {
                    init: n,
                    getTimeUserWords: function() {
                        return o(g)
                    },
                    getTimeUserDates: function() {
                        return o(i)
                    },
                    getTimeUserTimestamps: function() {
                        return o(j)
                    },
                    getTimeUser: function() {
                        return o(f)
                    },
                    getTimeStopToday: function() {
                        return m((new StrongDate).getDay())
                    }
                }
            }()
			 
		};
	
	
	
	
	
	
	
    return {
        init: function() {
            init()
        },
        showSimpleDialog: function() {
            showSimpleDialog()
        },
        showWidgetExit: function() {
            showWidgetExit()
        },
        showWidgetEnter: function() {
            showWidgetEnter()
        },
        showNamedDialog: function(a) {
            showNamedDialog(a)
        }
    }
}(this, this.document, this.location);